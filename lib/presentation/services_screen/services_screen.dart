import '../services_screen/widgets/serviceschipview_item_widget.dart';import 'bloc/services_bloc.dart';import 'models/services_model.dart';import 'models/serviceschipview_item_model.dart';import 'package:flutter/material.dart';import 'package:indus_motors/core/app_export.dart';import 'package:indus_motors/widgets/app_bar/appbar_image.dart';import 'package:indus_motors/widgets/app_bar/appbar_title.dart';import 'package:indus_motors/widgets/app_bar/appbar_trailing_image.dart';import 'package:indus_motors/widgets/app_bar/custom_app_bar.dart';import 'package:indus_motors/widgets/custom_icon_button.dart';class ServicesScreen extends StatelessWidget {const ServicesScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<ServicesBloc>(create: (context) => ServicesBloc(ServicesState(servicesModelObj: ServicesModel()))..add(ServicesInitialEvent()), child: ServicesScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: SizedBox(width: double.maxFinite, child: Column(children: [Divider(), SizedBox(height: 4.v), Padding(padding: EdgeInsets.only(left: 7.h), child: CustomIconButton(height: 41.v, width: 44.h, alignment: Alignment.centerLeft, child: CustomImageView(imagePath: ImageConstant.imgIcons8BackButton30))), SizedBox(height: 18.v), Text("msg_select_your_service".tr, style: CustomTextStyles.bodyLargeRegular), SizedBox(height: 29.v), _buildServicesChipView(context), SizedBox(height: 5.v)])), bottomNavigationBar: _buildHomeRow(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 52.h, leading: Container(margin: EdgeInsets.only(left: 20.h, top: 39.v, bottom: 31.v), padding: EdgeInsets.symmetric(horizontal: 6.h, vertical: 7.v), decoration: AppDecoration.fillRed.copyWith(borderRadius: BorderRadiusStyle.circleBorder16), child: AppbarImage(imagePath: ImageConstant.imgHome)), centerTitle: true, title: AppbarTitle(text: "lbl_indus_motors2".tr), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgEllipse15, margin: EdgeInsets.fromLTRB(8.h, 30.v, 8.h, 31.v))], styleType: Style.bgStyle_1); } 
/// Section Widget
Widget _buildServicesChipView(BuildContext context) { return BlocSelector<ServicesBloc, ServicesState, ServicesModel?>(selector: (state) => state.servicesModelObj, builder: (context, servicesModelObj) {return Wrap(runSpacing: 46.v, spacing: 46.h, children: List<Widget>.generate(servicesModelObj?.serviceschipviewItemList.length ?? 0, (index) {ServiceschipviewItemModel model = servicesModelObj?.serviceschipviewItemList[index] ?? ServiceschipviewItemModel(); return ServiceschipviewItemWidget(model, onSelectedChipView: (value) {context.read<ServicesBloc>().add(UpdateChipViewEvent(index: index, isSelected: value));});}));}); } 
/// Section Widget
Widget _buildHomeRow(BuildContext context) { return Container(margin: EdgeInsets.only(left: 39.h, right: 22.h, bottom: 39.v), decoration: AppDecoration.fillRed, child: Row(mainAxisAlignment: MainAxisAlignment.center, mainAxisSize: MainAxisSize.min, children: [Text("lbl_home".tr, style: CustomTextStyles.bodyLargeRegular), Spacer(flex: 56), GestureDetector(onTap: () {onTapTxtFEEDBACK(context);}, child: Text("lbl_feedback".tr, style: CustomTextStyles.bodyLargeRegular)), Spacer(flex: 43), Text("lbl_services".tr, style: CustomTextStyles.bodyLargeWhiteA700)])); } 
/// Navigates to the feedbacksuggestionScreen when the action is triggered.
onTapTxtFEEDBACK(BuildContext context) { NavigatorService.pushNamed(AppRoutes.feedbacksuggestionScreen, ); } 
 }
